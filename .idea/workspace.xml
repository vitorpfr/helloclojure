<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="BranchesTreeState">
    <expand>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="LOCAL_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="GROUP_NODE:origin" type="e8cecc67:BranchNodeDescriptor" />
      </path>
    </expand>
    <select />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="23bfe161-7d4f-4f25-9057-01a50f3da388" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/helloclojure/codewars/codewars.clj" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CodeStyleSettingsInfer">
    <option name="done" value="true" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
        <option value="Clojure Namespace" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="1" />
  </component>
  <component name="ProjectId" id="1jFqWuUQ9JrhBCeuHet7nWgQlVW" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="cursive.last.file.extension./Users/vitor.freitas/dev/pessoal/helloclojure/src" value="clj" />
    <property name="cursive.last.file.extension./Users/vitorfreitas/dev/personal/helloclojure/src" value="clj" />
    <property name="dart.analysis.tool.window.visible" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="project.structure.last.edited" value="Project" />
    <property name="project.structure.proportion" value="0.0" />
    <property name="project.structure.side.proportion" value="0.2" />
    <property name="settings.editor.selected.configurable" value="preferences.keymap" />
    <property name="show.migrate.to.gradle.popup" value="false" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/helloclojure/codewars/jaden-case" />
      <recent name="$PROJECT_DIR$/src/helloclojure/codewars/piglatin" />
      <recent name="$PROJECT_DIR$/src/helloclojure/brave" />
      <recent name="$PROJECT_DIR$/src/helloclojure" />
      <recent name="$PROJECT_DIR$/src/helloclojure/brave/fwpd" />
    </key>
  </component>
  <component name="ReplState" timestamp="1625368510002">{:repl-history {:ide [], :local [{:command &quot;(create-var one 1)&quot;, :offset 18, :ns &quot;helloclojure.brave.chapter-8&quot;} {:command &quot;(defmacro test-macro-3\n  [args]\n  `(do\n     ~@(map #(apply create-var %)\n            ~args)))&quot;, :offset 93, :ns &quot;helloclojure.brave.chapter-8&quot;} {:command &quot;(defn create-var\n  [[name val]]\n  (list 'def 'name val))&quot;, :offset 56, :ns &quot;helloclojure.brave.chapter-8&quot;} {:command &quot;(create-var [one 1])&quot;, :offset 20, :ns &quot;helloclojure.brave.chapter-8&quot;} {:command &quot;(defmacro test-macro-3\n  [args]\n  `(do\n     ~@(map #(create-var %)\n            ~args)))&quot;, :offset 87, :ns &quot;helloclojure.brave.chapter-8&quot;} {:command &quot;(test-macro-3 [[one 1]])&quot;, :offset 24, :ns &quot;helloclojure.brave.chapter-8&quot;} {:command &quot;u (.indexOf \&quot;Let's synergize our bleeding edges\&quot; \&quot;y\&quot;)&quot;, :offset 53, :ns &quot;helloclojure.core&quot;} {:command &quot;(.toUpperCase \&quot;By Bluebeard's bananas!\&quot;)&quot;, :offset 40, :ns &quot;helloclojure.brave.chapter-12&quot;} {:command &quot;(.indexOf \&quot;Let's synergize our bleeding edges\&quot; \&quot;y\&quot;)&quot;, :offset 51, :ns &quot;helloclojure.brave.chapter-12&quot;} {:command &quot;(java.lang.Math/abs -3)&quot;, :offset 23, :ns &quot;helloclojure.brave.chapter-12&quot;} {:command &quot;(macroexpand-1 '(.toUpperCase \&quot;By Bluebeard's bananas!\&quot;))&quot;, :offset 57, :ns &quot;helloclojure.brave.chapter-12&quot;} {:command &quot;(new String)&quot;, :offset 12, :ns &quot;helloclojure.brave.chapter-12&quot;} {:command &quot;(String. \&quot;To Davey Jones's Locker with ye hardies\&quot;)&quot;, :offset 51, :ns &quot;helloclojure.brave.chapter-12&quot;} {:command &quot;(str \&quot;To Davey Jones's Locker with ye hardies\&quot;)&quot;, :offset 47, :ns &quot;helloclojure.brave.chapter-12&quot;} {:command &quot;(let [stack (java.util.Stack.)]\n  (.push stack \&quot;Latest episode of Game of Thrones, ho!\&quot;)\n  stack)&quot;, :offset 97, :ns &quot;helloclojure.brave.chapter-12&quot;} {:command &quot;(doto (java.util.Stack.)\n  (.push \&quot;Latest episode of Game of Thrones, ho!\&quot;)\n  (.push \&quot;Whoops, I meant 'Land, ho!'\&quot;))&quot;, :offset 116, :ns &quot;helloclojure.brave.chapter-12&quot;} {:command &quot;(Date.)&quot;, :offset 7, :ns &quot;helloclojure.brave.chapter-12&quot;} {:command &quot;(System/getenv)&quot;, :offset 15, :ns &quot;helloclojure.brave.chapter-12&quot;} {:command &quot;(System/getProperty \&quot;user.dir\&quot;)&quot;, :offset 31, :ns &quot;helloclojure.brave.chapter-12&quot;} {:command &quot;(System/getProperty \&quot;java.version\&quot;)&quot;, :offset 35, :ns &quot;helloclojure.brave.chapter-12&quot;} {:command &quot;(def my-date #inst \&quot;2016-09-19T20:40:02.733-00:00\&quot;)&quot;, :offset 51, :ns &quot;helloclojure.brave.chapter-12&quot;} {:command &quot;(type my-date)&quot;, :offset 14, :ns &quot;helloclojure.brave.chapter-12&quot;} {:command &quot;(let [file (java.io.File. \&quot;/\&quot;)]\n  u (println (.exists file)))&quot;, :offset 61, :ns &quot;helloclojure.brave.chapter-12&quot;} {:command &quot;(let [file (java.io.File. \&quot;/\&quot;)]\n  (println (.exists file)))&quot;, :offset 59, :ns &quot;helloclojure.brave.chapter-12&quot;} {:command &quot;(let [file (java.io.File. \&quot;/\&quot;)]\n  (println (.exists file))\n  (println (.canWrite file))\n  (println (.getPath file)))&quot;, :offset 116, :ns &quot;helloclojure.brave.chapter-12&quot;} {:command &quot;(spit \&quot;/tmp/hercules-todo-list\&quot;\n      {\&quot;- kill dat lion brov\n      - chop up what nasty multi-headed snake thing\&quot;})&quot;, :offset 115, :ns &quot;helloclojure.brave.chapter-12&quot;} {:command &quot;(spit \&quot;/tmp/hercules-todo-list\&quot;\n      \&quot;- kill dat lion brov\n      - chop up what nasty multi-headed snake thing\&quot;)&quot;, :offset 113, :ns &quot;helloclojure.brave.chapter-12&quot;} {:command &quot;(slurp \&quot;/tmp/hercules-todo-list\&quot;)&quot;, :offset 33, :ns &quot;helloclojure.brave.chapter-12&quot;} {:command &quot;(let [s (java.io.StringWriter.)]\n  (spit s \&quot;- capture cerynian hind like for real\&quot;)\n  (.toString s))&quot;, :offset 100, :ns &quot;helloclojure.brave.chapter-12&quot;} {:command &quot;(let [s (java.io.StringReader. \&quot;- get erymanthian pig what with the tusks\&quot;)]\n  (slurp s))&quot;, :offset 89, :ns &quot;helloclojure.brave.chapter-12&quot;} {:command &quot;(with-open [todo-list-rdr (clojure.java.io/reader \&quot;/tmp/hercules-todo-list\&quot;)]\n  (println (first (line-seq todo-list-rdr))))&quot;, :offset 123, :ns &quot;helloclojure.brave.chapter-12&quot;} {:command &quot;(defmulti full-moon-behavior (fn [were-creature] (:were-type were-creature)))&quot;, :offset 77, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(full-moon-behavior {:were-type :wolf\n                     :name \&quot;Rachel from next door\&quot;})&quot;, :offset 90, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(full-moon-behavior {:name \&quot;Andy the baker\&quot;\n                     :were-type :simmons})&quot;, :offset 86, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(defmethod full-moon-behavior nil\n  [were-creature]\n  (str (:name were-creature) \&quot; will stay at home and eat ice cream\&quot;))&quot;, :offset 121, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(full-moon-behavior {:were-type nil\n                     :name \&quot;Martin the nurse\&quot;})&quot;, :offset 83, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(defmethod full-moon-behavior :default\n  [were-creature]\n  (str (:name were-creature) \&quot; will stay up all night fantasy footballing\&quot;))&quot;, :offset 133, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;y&quot;, :offset 1, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(full-moon-behavior {:were-type :office-worker\n                     :name \&quot;Jimmy from sales\&quot;})&quot;, :offset 94, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(were-creatures/full-moon-behavior {:name \&quot;Laura the intern\&quot;\n                                    :were-type :bill-murray})&quot;, :offset 122, :ns &quot;helloclojure.brave.random-namespace&quot;} {:command &quot;(defmulti types (fn [x y] [(class x) (class y)]))&quot;, :offset 49, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(defmethod types [java.lang.String java.lang.String]\n  [x y]\n  \&quot;Two strings!\&quot;)&quot;, :offset 78, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(types \&quot;String 1\&quot; \&quot;String 2\&quot;)&quot;, :offset 29, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(defprotocol Psychodynamics\n  \&quot;Plumb the inner depths of your data types\&quot;\n\n  (thoughts [x] \&quot;The data type's innermost thoughts\&quot;)\n  (feelings-about [x] [x y] \&quot;Feelings about self or other\&quot;))&quot;, :offset 189, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(extend-type java.lang.String\n  Psychodynamics\n  (thoughts [x] (str x \&quot; thinks, 'Truly, the character defines the data type'\&quot;))\n  (feelings-about\n    ([x] (str x \&quot; is longing for a simpler way of life\&quot;))\n    ([x y] (str x \&quot; is envious of \&quot; y \&quot;'s simpler way of life\&quot;))))&quot;, :offset 270, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(thoughts \&quot;blorb\&quot;)&quot;, :offset 18, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(feelings-about \&quot;schmorb\&quot;)&quot;, :offset 26, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(feelings-about \&quot;schmorb\&quot; 2)&quot;, :offset 28, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(extend-type java.lang.Object\n  Psychodynamics\n  (thoughts [x] \&quot;Maybe the Internet is just a vector for toxoplasmosis\&quot;)\n  (feelings-about\n    [x] \&quot;meh\&quot;\n    [x y] (str \&quot;meh about \&quot; y)))&quot;, :offset 184, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(extend-type java.lang.Object\n  Psychodynamics\n  (thoughts [x] \&quot;Maybe the Internet is just a vector for toxoplasmosis\&quot;)\n  (feelings-about\n    ([x] \&quot;meh\&quot;)\n    ([x y] (str \&quot;meh about \&quot; y))))&quot;, :offset 188, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(thoughts 3)&quot;, :offset 12, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(feelings-about 3)&quot;, :offset 18, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(feelings-about 3 \&quot;blorb\&quot;)&quot;, :offset 26, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(extend-protocol Psychodynamics\n  java.lang.String\n  (thoughts [x] \&quot;Truly, the character defines the data type\&quot;)\n  (feelings-about\n    ([x] \&quot;longing for a simpler way of life\&quot;)\n    ([x y] (str \&quot;envious of \&quot; y \&quot;'s simpler way of life\&quot;)))\n\n  java.lang.Object\n  (thoughts [x] \&quot;Maybe the Internet is just a vector for toxoplasmosis\&quot;)\n  (feelings-about\n    ([x] \&quot;meh\&quot;)\n    ([x y] (str \&quot;meh about \&quot; y))))&quot;, :offset 398, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(defrecord WereWolf [name title])&quot;, :offset 33, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(WereWolf. \&quot;David\&quot; \&quot;London Tourist\&quot;)&quot;, :offset 36, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(-&gt;WereWolf \&quot;Jacob\&quot; \&quot;Lead Shirt Discarder\&quot;)&quot;, :offset 43, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(map-&gt;WereWolf {:name \&quot;Lucian\&quot; :title \&quot;CEO of Melodrama\&quot;})&quot;, :offset 58, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(def jacob (-&gt;WereWolf \&quot;Jacob\&quot; \&quot;Lead Shirt Discarder\&quot;))&quot;, :offset 55, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(.name jacob)&quot;, :offset 13, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(:name jacob)&quot;, :offset 13, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(get jacob :name)&quot;, :offset 17, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(assoc jacob :title \&quot;Lead Third Wheel\&quot;)&quot;, :offset 39, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(dissoc jacob :title)&quot;, :offset 21, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(defprotocol WereCreature\n  (full-moon-behavior [x]))&quot;, :offset 53, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(defrecord WereWolf [name title]\n  WereCreature\n  (full-moon-behavior [x]\n    (str x \&quot; will howl and murder\&quot;)))&quot;, :offset 111, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(defrecord WereWolf [name title]\n  WereCreature\n  (full-moon-behavior [x]\n    (str name \&quot; will howl and murder\&quot;)))&quot;, :offset 114, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(full-moon-behavior (map-&gt;WereWolf {:name \&quot;Lucian\&quot; :title \&quot;CEO of Melodrama\&quot;}))&quot;, :offset 79, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(let [lucian (map-&gt;WereWolf {:name \&quot;Lucian\&quot; :title \&quot;CEO of Melodrama\&quot;})]\n  (full-moon-behavior lucian))&quot;, :offset 103, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(let [luc (map-&gt;WereWolf {:name \&quot;Lucian\&quot; :title \&quot;CEO of Melodrama\&quot;})]\n  (full-moon-behavior luc))&quot;, :offset 97, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(defmethod full-moon-behavior :worgen\n  [were-creature]\n  (str (:name were-creature) \&quot; comes directly from Gilneas!\&quot;))&quot;, :offset 118, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(full-moon-behavior {:name      \&quot;Gene the worgen\&quot;\n                     :were-type :worgen})&quot;, :offset 91, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(defrecord WereSimmons\n  [name title]\n  WereCreature\n  (full-moon-behavior [this] (str name \&quot; is considered \&quot; title)))&quot;, :offset 118, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(def john (-&gt;WereSimmons \&quot;John\&quot; \&quot;the slayer\&quot;))&quot;, :offset 46, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(full-moon-behaviors john)&quot;, :offset 26, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(defprotocol MyProtocol\n  (my-type [x]))&quot;, :offset 40, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(extend-type java.lang.String\n  MyProtocol\n  (my-type [x] (str \&quot;type of input is a string\&quot;)))&quot;, :offset 93, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(extend-protocol MyProtocol\n  BigDecimal\n  (my-type [x] (str \&quot;type of input is bigdec\&quot;))\n  \n  java.lang.Long\n  (my-type [x] (str \&quot;type of input is long\&quot;))\n  \n  java.lang.Object\n  (my-type [x] (str \&quot;x could be anything!\&quot;)))&quot;, :offset 222, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(my-type \&quot;oi\&quot;)&quot;, :offset 14, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(my-type 3M)&quot;, :offset 12, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(my-type 3)&quot;, :offset 11, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(my-type 0.1)&quot;, :offset 13, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(defrecord Player [name class])&quot;, :offset 31, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(defmulti cast-spell (fn [player] (:class player)))&quot;, :offset 51, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(defmethod cast-spell :mage\n  [player] (str (:name player) \&quot;used fireball!\&quot;))&quot;, :offset 77, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(defmethod cast-spell :warlock\n  [player] (str (:name player) \&quot;used shadow bolt!\&quot;))&quot;, :offset 83, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(defmethod cast-spell :priest\n  [player] (str (:name player) \&quot;used flash heal!\&quot;))&quot;, :offset 81, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(defmethod cast-spell :default\n  [player] (str (:name player) \&quot;punched the foe!\&quot;))&quot;, :offset 82, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(def player1 (-&gt;Player \&quot;John\&quot; :priest))&quot;, :offset 39, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(def player2 (-&gt;Player \&quot;Mary\&quot; :warrior))&quot;, :offset 40, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(def player3 (-&gt;Player \&quot;Joseph\&quot; :mage))&quot;, :offset 39, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(def player4 (-&gt;Player \&quot;Tom\&quot; :warlock))&quot;, :offset 39, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(cast-spell player1)&quot;, :offset 20, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(defmethod cast-spell :default\n  [player] (str (:name player) \&quot; punched the foe!\&quot;))&quot;, :offset 83, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(defmethod cast-spell :priest\n  [player] (str (:name player) \&quot; used flash heal!\&quot;))&quot;, :offset 82, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(defmethod cast-spell :warlock\n  [player] (str (:name player) \&quot; used shadow bolt!\&quot;))&quot;, :offset 84, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(defmethod cast-spell :mage\n  [player] (str (:name player) \&quot; used fireball!\&quot;))&quot;, :offset 78, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(cast-spell player2)&quot;, :offset 20, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(cast-spell player3)&quot;, :offset 20, :ns &quot;helloclojure.brave.chapter-13&quot;} {:command &quot;(cast-spell player4)&quot;, :offset 20, :ns &quot;helloclojure.brave.chapter-13&quot;}], :remote []}}</component>
  <component name="RunManager" selected="Clojure REPL.REPL for helloclojure">
    <configuration default="true" type="Application" factoryName="Application">
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="REPL for helloclojure" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false" temporary="true">
      <module name="helloclojure" />
      <setting name="displayName" value="" />
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <setting name="displayName" value="" />
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="displayName" value="" />
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="NREPL" />
      <setting name="configType" value="SPECIFY" />
      <setting name="replPortFileType" value="STANDARD" />
      <setting name="customPortFile" value="" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="user" type="ClojureScriptRunConfiguration" factoryName="Clojure Script" temporary="true">
      <module name="helloclojure" />
      <setting name="path" value="$PROJECT_DIR$/src/helloclojure/brave/fwpd/project.clj" />
      <setting name="namespace" value="" />
      <setting name="execution" value="INTELLIJ" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workDir" value="$PROJECT_DIR$/src/helloclojure/brave/fwpd" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="JUnit" factoryName="JUnit">
      <option name="TEST_OBJECT" value="class" />
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="TestNG">
      <option name="TEST_OBJECT" value="CLASS" />
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
      <properties />
      <listeners />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Clojure REPL.REPL for helloclojure" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="23bfe161-7d4f-4f25-9057-01a50f3da388" name="Default Changelist" comment="" />
      <created>1603410222132</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1603410222132</updated>
    </task>
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
  <component name="masterDetails">
    <states>
      <state key="GlobalLibrariesConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="JdkListConfigurable.UI">
        <settings>
          <last-edited>1.8</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectLibrariesConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
    </states>
  </component>
</project>